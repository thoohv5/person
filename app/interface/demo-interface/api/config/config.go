// Code generated by protoc-gen-go-configs. DO NOT EDIT.
// versions:
// - protoc-gen-go-configs v0.0.1
// - protoc             v3.11.4
// source: demo-interface/api/conf/conf.proto

package config

import (
	"github.com/thoohv5/person/internal/provide/cron"
	"github.com/thoohv5/person/internal/provide/db"
	"github.com/thoohv5/person/internal/provide/http"
	"github.com/thoohv5/person/internal/provide/logger"
	"github.com/thoohv5/person/internal/provide/nats"
	"github.com/thoohv5/person/internal/provide/redis"
)

// 配置
type IBootstrap interface {
	// 配置文件夹路径
	GetPath() string
	// HTTP 配置
	GetHttp() *http.Config
	// 日志配置
	GetLogger() *logger.Config
	// 数据配置
	GetDatabase() map[string]*db.Config
	// Redis 配置
	GetRedis() *redis.Config
	// Cron 配置
	GetCron() *CronConfig
	// NATS配置
	GetNats() *NatsConfig
	// 业务配置
	GetBusiness() *BusinessConfig
}

// 配置
type Bootstrap struct {
	// 配置文件夹路径
	Path string `json:"path,omitempty"`
	// Config 配置
	Http *http.Config `json:"http,omitempty"`
	// 日志配置
	Logger *logger.Config `json:"logger,omitempty"`
	// 数据配置
	Database map[string]*db.Config `json:"database"`
	// Redis 配置
	Redis *redis.Config `json:"redis,omitempty"`
	// Cron 配置
	Cron *CronConfig `json:"cron,omitempty"`
	// NATS配置
	Nats *NatsConfig `json:"nats,omitempty"`
	// 业务配置
	Business *BusinessConfig `json:"business,omitempty"`
}

type CronConfig struct {
	cron.Config

	Demo *cron.Timer
}

type NatsConfig struct {
	*nats.Config

	Demo *nats.Consumer
}

type BusinessConfig struct {
}

func (x *Bootstrap) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Bootstrap) GetHttp() *http.Config {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Bootstrap) GetLogger() *logger.Config {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *Bootstrap) GetDatabase() map[string]*db.Config {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Bootstrap) GetRedis() *redis.Config {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Bootstrap) GetCron() *CronConfig {
	if x != nil {
		return x.Cron
	}
	return nil
}

func (x *Bootstrap) GetNats() *NatsConfig {
	if x != nil {
		return x.Nats
	}
	return nil
}

func (x *Bootstrap) GetBusiness() *BusinessConfig {
	if x != nil {
		return x.Business
	}
	return nil
}
